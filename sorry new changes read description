import socket
import threading
import pygame
import sys

# Client config
HOST = '127.0.0.1'
PORT = 55556

pygame.init()
WIDTH, HEIGHT = 500, 400
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Chat Client")
FONT = pygame.font.SysFont('arial', 22)
CLOCK = pygame.time.Clock()

# Colors
BG_COLOR = (25, 25, 25)
TEXT_COLOR = (230, 230, 230)
INPUT_BG_COLOR = (50, 50, 50)
INPUT_ACTIVE_COLOR = (90, 90, 90)
CHAT_BG_COLOR = (40, 40, 40)
ERROR_COLOR = (255, 80, 80)

MAX_MESSAGES = 20

# Chat state
nickname = ""
nickname_entered = False
input_active = False
input_text = ""
messages = []

# Socket setup
client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

def draw_text(surface, text, pos, color=TEXT_COLOR):
    rendered = FONT.render(text, True, color)
    surface.blit(rendered, pos)

def receive_messages():
    global messages
    while True:
        try:
            msg = client.recv(1024).decode('utf-8')
            messages.append(msg)
            if len(messages) > MAX_MESSAGES:
                messages.pop(0)
        except:
            break

def connect_to_server():
    global nickname
    try:
        client.connect((HOST, PORT))
    except Exception as e:
        print(f"Failed to connect to server: {e}")
        sys.exit()

def main_loop():
    global nickname, nickname_entered, input_active, input_text

    nickname_rect = pygame.Rect(50, HEIGHT//2 - 30, WIDTH - 100, 40)
    chat_input_rect = pygame.Rect(10, HEIGHT - 40, WIDTH - 20, 30)
    chat_box_rect = pygame.Rect(10, 10, WIDTH - 20, HEIGHT - 80)

    clock = pygame.time.Clock()

    while True:
        screen.fill(BG_COLOR)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                client.close()
                pygame.quit()
                sys.exit()

            elif event.type == pygame.MOUSEBUTTONDOWN:
                if nickname_entered:
                    if chat_input_rect.collidepoint(event.pos):
                        input_active = True
                    else:
                        input_active = False
                else:
                    if nickname_rect.collidepoint(event.pos):
                        input_active = True
                    else:
                        input_active = False

            elif event.type == pygame.KEYDOWN and input_active:
                if event.key == pygame.K_RETURN:
                    if not nickname_entered:
                        if input_text.strip() != "":
                            nickname = input_text.strip()
                            nickname_entered = True
                            client.send(nickname.encode('utf-8'))
                            input_text = ""
                            threading.Thread(target=receive_messages, daemon=True).start()
                        else:
                            # Empty nickname, ignore
                            pass
                    else:
                        if input_text.strip() != "":
                            msg_to_send = f"{nickname}: {input_text.strip()}"
                            try:
                                client.send(msg_to_send.encode('utf-8'))
                                input_text = ""
                            except:
                                messages.append("**Disconnected from server**")
                elif event.key == pygame.K_BACKSPACE:
                    input_text = input_text[:-1]
                else:
                    if len(input_text) < 100:
                        input_text += event.unicode

        if not nickname_entered:
            # Draw nickname prompt UI
            draw_text(screen, "Enter your nickname:", (nickname_rect.x, nickname_rect.y - 30))
            pygame.draw.rect(screen, INPUT_ACTIVE_COLOR if input_active else INPUT_BG_COLOR, nickname_rect, border_radius=6)
            draw_text(screen, input_text, (nickname_rect.x + 5, nickname_rect.y + 5))
        else:
            # Draw chat messages
            pygame.draw.rect(screen, CHAT_BG_COLOR, chat_box_rect, border_radius=6)
            y = chat_box_rect.y + 5
            for msg in messages:
                draw_text(screen, msg, (chat_box_rect.x + 5, y))
                y += 25

            # Draw chat input
            pygame.draw.rect(screen, INPUT_ACTIVE_COLOR if input_active else INPUT_BG_COLOR, chat_input_rect, border_radius=6)
            draw_text(screen, input_text, (chat_input_rect.x + 5, chat_input_rect.y + 5))

        pygame.display.flip()
        clock.tick(30)

if __name__ == "__main__":
    connect_to_server()
    main_loop()
